// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name InlinePlayerSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AVKit
import Accelerate
import CommonCrypto
import CoreGraphics
import CoreImage
import CoreMIDI
import CryptoKit
import Foundation
import GLKit
import ImageIO
@_exported import InlinePlayerSDK
import MessageUI
import MobileCoreServices
import Photos
import QuartzCore
import SafariServices
import Security
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
public struct KeychainSwiftConstants {
  public static var accessGroup: Swift.String {
    get
  }
  public static var accessible: Swift.String {
    get
  }
  public static var attrAccount: Swift.String {
    get
  }
  public static var attrSynchronizable: Swift.String {
    get
  }
  public static var klass: Swift.String {
    get
  }
  public static var matchLimit: Swift.String {
    get
  }
  public static var returnData: Swift.String {
    get
  }
  public static var valueData: Swift.String {
    get
  }
  public static var returnReference: Swift.String {
    get
  }
  public static var returnAttributes: Swift.String {
    get
  }
  public static var secMatchLimitAll: Swift.String {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class ICPSDKBase : ObjectiveC.NSObject {
  public var launchIcon: UIKit.UIImage? {
    get
    set
  }
  @objc override dynamic public init()
  @objc deinit
}
public typealias KFCrossPlatformImage = UIKit.UIImage
public typealias KFCrossPlatformColor = UIKit.UIColor
public enum KeychainSwiftAccessOptions {
  case accessibleWhenUnlocked
  case accessibleWhenUnlockedThisDeviceOnly
  case accessibleAfterFirstUnlock
  case accessibleAfterFirstUnlockThisDeviceOnly
  case accessibleWhenPasscodeSetThisDeviceOnly
  public static func == (a: InlinePlayerSDK.KeychainSwiftAccessOptions, b: InlinePlayerSDK.KeychainSwiftAccessOptions) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
open class KeychainSwift {
  open var lastResultCode: Darwin.OSStatus
  open var accessGroup: Swift.String?
  open var synchronizable: Swift.Bool
  public init()
  public init(keyPrefix: Swift.String)
  @discardableResult
  open func set(_ value: Swift.String?, forKey key: Swift.String, withAccess access: InlinePlayerSDK.KeychainSwiftAccessOptions? = nil) -> Swift.Bool
  @discardableResult
  open func set(_ value: Foundation.Data, forKey key: Swift.String, withAccess access: InlinePlayerSDK.KeychainSwiftAccessOptions? = nil) -> Swift.Bool
  @discardableResult
  open func set(_ value: Swift.Bool, forKey key: Swift.String, withAccess access: InlinePlayerSDK.KeychainSwiftAccessOptions? = nil) -> Swift.Bool
  open func get(_ key: Swift.String) -> Swift.String?
  open func getData(_ key: Swift.String, asReference: Swift.Bool = false) -> Foundation.Data?
  open func getBool(_ key: Swift.String) -> Swift.Bool?
  @discardableResult
  open func delete(_ key: Swift.String) -> Swift.Bool
  public var allKeys: [Swift.String] {
    get
  }
  @discardableResult
  open func clear() -> Swift.Bool
  @objc deinit
}
infix operator |> : AdditionPrecedence
@objc @_hasMissingDesignatedInitializers @objcMembers public class PlayerSDK : InlinePlayerSDK.ICPSDKBase {
  @objc public static var shared: InlinePlayerSDK.PlayerSDK
  @objc public class func deInitializeSDK()
  @objc public class func initializeWith(orgnizationKey: Swift.String, secretKey: Swift.String, dict: [Swift.String : Swift.String]? = nil)
  @objc deinit
}
extension UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public func applyUniqueIdentifer(identifier: Swift.String, label: Swift.String)
}
extension InlinePlayerSDK.KeychainSwiftAccessOptions : Swift.Equatable {}
extension InlinePlayerSDK.KeychainSwiftAccessOptions : Swift.Hashable {}
